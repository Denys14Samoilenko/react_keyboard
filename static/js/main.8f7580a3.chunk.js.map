{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKey","event","setState","key","document","addEventListener","this","removeEventListener","className","href","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,WAAW,GAAD,OAAKE,EAAME,QAdzC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,aAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,aAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGC,KAAK,IAAID,UAAU,eAAtB,SACGF,KAAKR,MAAMC,WAAX,mCAE+BO,KAAKR,MAAMC,WAF1C,KAIG,kCAzBd,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.8f7580a3.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKey);\n  }\n\n  handleKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `${event.key}` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href=\"/\" className=\"App__message\">\n          {this.state.pressedKey\n            ? (\n              `The last pressed key is [${this.state.pressedKey}]`\n            )\n            : 'Nothing was pressed yet'}\n        </a>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}